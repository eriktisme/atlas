name: Preview Deployment

permissions:
  actions: read
  contents: read
  id-token: write

env:
  CI: true
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  TURBO_TEAM: ${{ secrets.VERCEL_ORG_ID }}
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
  NEON_PROJECT: ${{ secrets.NEON_PROJECT }}
  STAGE: ${{ github.event.number && 'pr-' || '' }}${{ github.event.number || github.sha }}

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: '${{ github.workflow }}-${{ github.event.number || github.sha }}'
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/cache@v4
        with:
          path: .turbo
          key: '${{ runner.os }}-turbo-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm build

  tests:
    runs-on: ubuntu-latest
    needs: [build]
    concurrency:
      group: '${{ github.workflow }}-${{ github.event.number || github.sha }}'
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/cache@v4
        with:
          path: .turbo
          key: '${{ runner.os }}-turbo-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - run: pnpm test

  deploy-engine:
    runs-on: ubuntu-latest
    needs: [build, tests]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/cache@v4
        with:
          path: .turbo
          key: '${{ runner.os }}-turbo-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/atlas-deploy-role
          aws-region: eu-west-1

      - uses: neondatabase/create-branch-action@v6
        id: create-branch
        with:
          project_id: ${{ secrets.NEON_PROJECT }}
          api_key: ${{ secrets.NEON_API_KEY }}
          branch_name: ${{ github.event.number || github.sha }}

      - run: pnpm cdk:network -- deploy --all --require-approval never --context stage=${{ env.STAGE }}

      - run: pnpm cdk:migrations -- deploy --all --require-approval never --context stage=${{ env.STAGE }}
        env:
          DATABASE_URL: ${{ steps.create-branch.outputs.db_url_pooled }}

      - run: pnpm cdk:engine -- deploy --all --require-approval never --context stage=${{ env.STAGE }}
        env:
          DATABASE_URL: ${{ steps.create-branch.outputs.db_url_pooled }}

  deploy-endpoints:
    runs-on: ubuntu-latest
    needs: [build, tests, deploy-engine]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          run_install: false

      - uses: actions/cache@v4
        with:
          path: .turbo
          key: '${{ runner.os }}-turbo-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-turbo-

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - run: pnpm install --frozen-lockfile

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/atlas-deploy-role
          aws-region: eu-west-1

      - uses: neondatabase/create-branch-action@v6
        id: create-branch
        with:
          project_id: ${{ secrets.NEON_PROJECT }}
          api_key: ${{ secrets.NEON_API_KEY }}
          branch_name: ${{ github.event.number || github.sha }}

      - run: pnpm cdk:api -- deploy --all --require-approval never --context stage=${{ env.STAGE }}

#  deploy-app:
#    runs-on: ubuntu-latest
#    needs: [build, tests, deploy-engine]
#    environment: preview
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - uses: pnpm/action-setup@v4
#        with:
#          run_install: false
#
#      - uses: actions/cache@v4
#        with:
#          path: .turbo
#          key: '${{ runner.os }}-turbo-${{ github.sha }}'
#          restore-keys: |
#            ${{ runner.os }}-turbo-
#
#      - uses: actions/setup-node@v4
#        with:
#          node-version: 22
#          cache: pnpm
#
#      - run: pnpm install --frozen-lockfile
#
#      - run: pnpm vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
#        env:
#          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
